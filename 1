#include <stdio.h>
#include <locale.h>
#include <math.h>
#include <stdlib.h>

double Delta(double, double);
double otnDelta(double, double);


int main()
{
	setlocale(LC_ALL, "RUS");

	printf("ЗАДАНИЕ А\n");
	double a, b, ad, bd;
	printf("Какое выражение точнее : 1) 4 / 17 = 0,235 или 2) sqrt(105) = 10,25\n");

	/* Вычислить и вывести на экран в виде таблицы значения функции за -
		данной с помощью ряда Тейлора на интервале от хn до xk с шагом dx.

		Реализовать два цикла вычисления значений функции : f1(x) - для вычис -
		ления ряда с заданной точностью ε1 = 0.1 и f2(x) - для вычисления ряда с за -
		данной точностью ε2 = 0.000001.

		Каждая строка таблицы должна содержать значение аргумента, значение
		заданной f(x), точность eps1, значение функции f1(x), точность eps2, значение
		функции f2(x)

		Оценить скорость сходимости ряда, найдя число слагаемых, необходи -
		мое для достижения каждой из заданных погрешностей.*/


	printf("	Значения выражений с большим количеством десятичных знаков :\n");
	a = 4. / 17.;
	ad = 0.235;

	b = sqrt(105);
	bd = 10.25;
	printf("1) 4/ 17 = %lf\n", a);
	printf("2) sqrt(105) = %lf\n", b);
	printf("	Предельные абсолютные погрешности, округляя их с избытком :\n");
	printf("1) %lf\n", Delta(a, ad));
	printf("2) %lf\n", Delta(b, bd));
	printf("Предельные абсолютные погрешности составляют в % :\n");
	printf("1) %lf\n", otnDelta(a, ad));
	printf("2) %lf\n", otnDelta(b, bd));
	printf("\nЗначит, более точное выражение : sqrt(105) = 10,25\n");


	printf("\nЗАДАНИЕ Б\n");

	printf("\nИсходное число: 1.1341\nОтносительная погрешность: 0,12% или 0,0012");
	printf("\nАбсолютная погрешность равна %lf\n", 1.1341 * 0.0012);

	printf("\nЗАДАНИЕ В\n");

	printf("\nИсходное число: 2,401\nАбсолютная погрешность: 0,005\n");
	printf("Относительная погрешность: %lf", (2.401 - 0.005) / 2.401);
}



double Delta(double x, double delx)
{
	double delta = 0;
	delta = fabs(x - delx);
	return delta;

}
double otnDelta(double x, double delx)
{
	double res, otndelta;
	res = Delta(x, delx);
	otndelta = (res / fabs(delx) * 100);
	return otndelta;
}
